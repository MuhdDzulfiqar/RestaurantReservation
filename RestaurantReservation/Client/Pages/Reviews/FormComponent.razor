@inject HttpClient _client

<EditForm Model="@review" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class=" form-group">
            <label>Rating: </label>
            <div>
                <InputNumber @bind-Value="@review.Rating" class="form-control" />
                <ValidationMessage For="@(() => review.Rating)" />
            </div>
        </div>

        <div class=" form-group">
            <label>Comments: </label>
            <div>
                <InputText @bind-Value="@review.Comments" class="form-control" />
                <ValidationMessage For="@(() => review.Comments)" />
            </div>
        </div>
    </fieldset>

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="reviews" />
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Review review { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Category> Categories;

    protected async override Task OnInitializedAsync()
    {
        Categories = await _client.GetFromJsonAsync<List<Category>>($"{Endpoints.CategoriesEndpoint}");
    }
}