@inject HttpClient _client

<EditForm Model="@reservation" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Staff: </label>
            <div>
                <InputSelect @bind-Value="reservation.StaffID" class="form-control">
                    <option value="">-- Select Staff --</option>
                    @if (Staffs != null)
                    {
                        foreach (var staff in Staffs)
                        {
                            <option value="@staff.Id">
                                @staff.Name @staff.Gender - @staff.EmailAddress
                            </option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => reservation.StaffID)" />
            </div>
        </div>

        <div class="form-group">
            <label>Customer: </label>
            <div>
                <InputSelect @bind-Value="reservation.CustomerID" class="form-control">
                    <option value="">-- Select Customer --</option>
                    @if (Customers != null)
                    {
                        foreach (var customer in Customers)
                        {
                            <option value="@customer.Id">
                                @customer.LastName - @customer.ContactNumber
                            </option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => reservation.CustomerID)" />
            </div>
        </div>

        <div class="form-group">
            <label>Date: </label>
            <div>
                <InputDate @bind-Value="@reservation.DateStart" class="form-control" />
                <ValidationMessage For="@(() => reservation.DateStart)" />
            </div>
        </div>

    </fieldset>

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="reservations" />
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Reservation reservation { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Staff> Staffs;
    private IList<Customer> Customers;

    protected async override Task OnInitializedAsync()
    {
        Staffs = await _client.GetFromJsonAsync<List<Staff>>($"{Endpoints.StaffsEndpoint}");
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");
    }
}