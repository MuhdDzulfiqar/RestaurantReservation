@inject HttpClient _client

<EditForm Model="@restaurant" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class=" form-group">
            <label>Name: </label>
            <div>
                <InputText @bind-Value="@restaurant.Name" class="form-control" />
                <ValidationMessage For="@(() => restaurant.Name)" />
            </div>
        </div>

        <div class=" form-group">
            <label>Address: </label>
            <div>
                <InputText @bind-Value="@restaurant.Address" class="form-control" />
                <ValidationMessage For="@(() => restaurant.Address)" />
            </div>
        </div>

        <div class=" form-group">
            <label>Contact Number: </label>
            <div>
                <InputText @bind-Value="@restaurant.ContactNumber" class="form-control" />
                <ValidationMessage For="@(() => restaurant.ContactNumber)" />
            </div>
        </div>

        <div class="form-group">
            <label>Category: </label>
            <div>
                <InputSelect @bind-Value="restaurant.CategoryID" class="form-control">
                    <option value="">-- Select Category --</option>
                    @if (Categories != null)
                    {
                        foreach (var category in Categories)
                        {
                            <option value="@category.Id">
                                @category.Name
                            </option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => restaurant.CategoryID)" />
            </div>
        </div>

        <div class="form-group">
            <label>Status: </label>
            <div>
                <InputSelect @bind-Value="restaurant.CategoryID" class="form-control">
                    <option value="">-- Select Status --</option>
                    @if (Categories != null)
                    {
                        foreach (var category in Categories)
                        {
                            <option value="@category.Id">
                                @category.Status
                            </option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => restaurant.CategoryID)" />
            </div>
        </div>
    </fieldset>

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="restaurants" />
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Restaurant restaurant { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Category> Categories;

    protected async override Task OnInitializedAsync()
    {
        Categories = await _client.GetFromJsonAsync<List<Category>>($"{Endpoints.CategoriesEndpoint}");
    }
}